{"ast":null,"code":"var _jsxFileName = \"/Users/yiping.z/Desktop/meeting-search/frontend/src/components/Tweets.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Tweet from \"./Tweet\";\n\nclass Tweets extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.generateRandomTweet = () => {\n      return {\n        user: Math.random().toString(36).substring(7),\n        message: Math.random().toString(36).substring(100),\n        timestamp: Math.random().toDate(),\n        matching_terms: [\"random\"]\n      };\n    };\n\n    console.log(this.props);\n    this.state = {\n      tweets: [...props.tweets]\n    };\n    this.twitterScroll = null;\n\n    this.setTwitterScrollRef = element => {\n      this.twitterScroll = element;\n    };\n\n    this.listenScrollEvent = this.listenScrollEvent.bind(this);\n  }\n\n  componentDidMount() {\n    ReactDOM.findDOMNode(this.twitterScroll).addEventListener(\"scroll\", this.listenScrollEvent);\n  }\n\n  componentWillUnmount() {\n    ReactDOM.findDOMNode(this.twitterScroll).removeEventListener(\"scroll\", this.listenScrollEvent);\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.tweets !== prevProps.tweets) {\n      this.setState({\n        tweets: [...this.props.tweets]\n      });\n    }\n  }\n\n  listenScrollEvent(event) {\n    let el = event.target;\n\n    if (el.scrollHeight - el.scrollTop - el.clientHeight < 1) {\n      let newTweet = this.generateRandomTweet;\n      this.state.tweets.push(newTweet);\n      this.setState({\n        tweets: this.state.tweets\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"panel-body msg_container_base\",\n      ref: this.setTwitterScrollRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, this.state.tweets.map(t => /*#__PURE__*/React.createElement(Tweet, {\n      tweet: t,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 51\n      }\n    }))));\n  }\n\n}\n\nexport default Tweets;","map":{"version":3,"sources":["/Users/yiping.z/Desktop/meeting-search/frontend/src/components/Tweets.js"],"names":["React","ReactDOM","Tweet","Tweets","Component","constructor","props","generateRandomTweet","user","Math","random","toString","substring","message","timestamp","toDate","matching_terms","console","log","state","tweets","twitterScroll","setTwitterScrollRef","element","listenScrollEvent","bind","componentDidMount","findDOMNode","addEventListener","componentWillUnmount","removeEventListener","componentDidUpdate","prevProps","setState","event","el","target","scrollHeight","scrollTop","clientHeight","newTweet","push","render","map","t"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA+CnBC,mBA/CmB,GA+CG,MAAM;AACxB,aAAM;AACFC,QAAAA,IAAI,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,CADJ;AAEFC,QAAAA,OAAO,EAAEJ,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,GAArC,CAFP;AAGFE,QAAAA,SAAS,EAAEL,IAAI,CAACC,MAAL,GAAcK,MAAd,EAHT;AAIFC,QAAAA,cAAc,EAAE,CAAC,QAAD;AAJd,OAAN;AAMH,KAtDkB;;AAEfC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAjB;AACA,SAAKa,KAAL,GAAW;AACPC,MAAAA,MAAM,EAAE,CAAC,GAAGd,KAAK,CAACc,MAAV;AADD,KAAX;AAGA,SAAKC,aAAL,GAAqB,IAArB;;AACA,SAAKC,mBAAL,GAA2BC,OAAO,IAAI;AACpC,WAAKF,aAAL,GAAqBE,OAArB;AACD,KAFD;;AAGA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBzB,IAAAA,QAAQ,CAAC0B,WAAT,CAAqB,KAAKN,aAA1B,EAAyCO,gBAAzC,CACI,QADJ,EAEI,KAAKJ,iBAFT;AAIH;;AAEDK,EAAAA,oBAAoB,GAAG;AACnB5B,IAAAA,QAAQ,CAAC0B,WAAT,CAAqB,KAAKN,aAA1B,EAAyCS,mBAAzC,CACI,QADJ,EAEI,KAAKN,iBAFT;AAIH;;AAEDO,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B;AACA,QAAI,KAAK1B,KAAL,CAAWc,MAAX,KAAsBY,SAAS,CAACZ,MAApC,EAA4C;AACxC,WAAKa,QAAL,CAAc;AACVb,QAAAA,MAAM,EAAE,CAAC,GAAG,KAAKd,KAAL,CAAWc,MAAf;AADE,OAAd;AAGH;AACJ;;AAEDI,EAAAA,iBAAiB,CAACU,KAAD,EAAQ;AACrB,QAAIC,EAAE,GAAGD,KAAK,CAACE,MAAf;;AACA,QAAGD,EAAE,CAACE,YAAH,GAAkBF,EAAE,CAACG,SAArB,GAAiCH,EAAE,CAACI,YAApC,GAAmD,CAAtD,EAAwD;AACpD,UAAIC,QAAQ,GAAG,KAAKjC,mBAApB;AACA,WAAKY,KAAL,CAAWC,MAAX,CAAkBqB,IAAlB,CAAuBD,QAAvB;AACA,WAAKP,QAAL,CAAc;AACVb,QAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC;AADT,OAAd;AAGH;AACJ;;AAWDsB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAC,+BAAX;AAA2C,MAAA,GAAG,EAAE,KAAKpB,mBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKH,KAAL,CAAWC,MAAX,CAAkBuB,GAAlB,CAAuBC,CAAD,iBAAO,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEA,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7B,CADL,CADJ,CADJ;AAOH;;AAjEgC;;AAoErC,eAAezC,MAAf","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\"\nimport Tweet from \"./Tweet\";\n\nclass Tweets extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(this.props);\n        this.state={\n            tweets: [...props.tweets]\n        }\n        this.twitterScroll = null;\n        this.setTwitterScrollRef = element => {\n          this.twitterScroll = element;\n        };\n        this.listenScrollEvent = this.listenScrollEvent.bind(this);\n    }\n\n    componentDidMount() {\n        ReactDOM.findDOMNode(this.twitterScroll).addEventListener(\n            \"scroll\",\n            this.listenScrollEvent\n        );\n    }\n\n    componentWillUnmount() {\n        ReactDOM.findDOMNode(this.twitterScroll).removeEventListener(\n            \"scroll\",\n            this.listenScrollEvent\n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        if (this.props.tweets !== prevProps.tweets) {\n            this.setState({\n                tweets: [...this.props.tweets]\n            });\n        }\n    }\n\n    listenScrollEvent(event) {\n        let el = event.target;\n        if(el.scrollHeight - el.scrollTop - el.clientHeight < 1){\n            let newTweet = this.generateRandomTweet;\n            this.state.tweets.push(newTweet);\n            this.setState({\n                tweets: this.state.tweets\n            });\n        }\n    }\n\n    generateRandomTweet = () => {\n        return{\n            user: Math.random().toString(36).substring(7),\n            message: Math.random().toString(36).substring(100),\n            timestamp: Math.random().toDate(),\n            matching_terms: [\"random\"]\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"display\">\n                <div class=\"panel-body msg_container_base\" ref={this.setTwitterScrollRef}>\n                    {this.state.tweets.map((t) => <Tweet tweet={t}/>)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Tweets;\n"]},"metadata":{},"sourceType":"module"}